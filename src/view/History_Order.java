package view;

import dao.DBConnection;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.*;
import javax.swing.JOptionPane;

/**
 *
 * @author ADMIN
 */
public class History_Order extends javax.swing.JFrame {
    private String username; // biến lưu tài khoản hiện tại
    /**
     * Creates new form History_Order
     */
    public History_Order(String username) {
        initComponents();
        setLocationRelativeTo(null);//Căn giữa khi mở chương trình
        this.username = username;        
        loadHistory();
    }
    
    private void loadHistory() {
        // Tạo model mới với tiêu đề cột
        DefaultTableModel model = new DefaultTableModel(
            new Object[]{
                "Mã chi tiết", 
                "Mã đơn hàng", 
                "Mã sản phẩm", 
                "Tên sản phẩm", 
                "Ngày đặt", 
                "Ngày giao", 
                "Địa chỉ", 
                "Ghi chú", 
                "Giá", 
                "Số lượng", 
                "Thành tiền"
            }, 0
        );

        String sql = """
            SELECT 
                od.id AS order_detail_id,
                o.id AS order_id,
                p.id AS product_id,
                p.name AS product_name,
                o.order_date,
                o.delivery_date,
                o.address,
                o.note,
                od.price,
                od.quantity,
                (od.price * od.quantity) AS amount
            FROM order_details od
            JOIN orders o ON od.order_id = o.id
            JOIN product p ON od.product_id = p.id
            WHERE o.created_by = ?
        """;

        try (Connection conn = DBConnection.getConnection();
             PreparedStatement ps = conn.prepareStatement(sql)) {

            ps.setString(1, username);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("order_detail_id"),
                    rs.getString("order_id"),
                    rs.getString("product_id"),
                    rs.getString("product_name"),
                    rs.getDate("order_date"),
                    rs.getDate("delivery_date"),
                    rs.getString("address"),
                    rs.getString("note"),
                    rs.getBigDecimal("price"),
                    rs.getInt("quantity"),
                    rs.getBigDecimal("amount")
                });
            }

            // Gán model mới có tiêu đề cho JTable
            tblHistoryOrder.setModel(model);

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi tải lịch sử mua hàng: " + e.getMessage());
        }
    }





    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnComeback = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblHistoryOrder = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Lịch sử mua hàng");

        btnComeback.setText("Quay lại");
        btnComeback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComebackActionPerformed(evt);
            }
        });

        tblHistoryOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã chi tiết", "Mã đơn hàng", "Mã sản phẩm", "Tên sản phẩm", "Ngày đặt", "Ngày giao", "Địa chỉ", "Ghi chú", "Giá", "Số lượng", "Thành tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblHistoryOrder);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnComeback)
                                .addGap(399, 399, 399)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 533, Short.MAX_VALUE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addComponent(btnComeback))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(240, 240, 240)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnComebackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComebackActionPerformed
        this.dispose();
        OrderUser order = new OrderUser(username);
        order.setVisible(true);
    }//GEN-LAST:event_btnComebackActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnComeback;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable tblHistoryOrder;
    // End of variables declaration//GEN-END:variables
}
